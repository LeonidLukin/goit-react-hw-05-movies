{"version":3,"file":"static/js/594.29ee91fc.chunk.js","mappings":"+QAGaA,EAAOC,EAAAA,EAAAA,GAAH,0HAQJC,EAAOD,EAAAA,EAAAA,GAAH,wLAWJE,EAAeF,EAAAA,EAAAA,IAAH,4GAOZG,EAAQH,EAAAA,EAAAA,IAAH,yCAILI,EAAOJ,EAAAA,EAAAA,EAAH,+EAGNK,EAAAA,I,SCGX,MAlCA,YAAiC,IAAXC,EAAU,EAAVA,OACpB,OACE,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACE,SAACT,EAAD,UACGO,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,UAACX,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEU,IACED,EAAK,0CAAsCA,GAAUE,EAEvDC,IAAKJ,OAGT,SAACP,EAAD,UAAOO,MATED,WC0BvB,MA/BA,WACE,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOZ,EAAP,KAAea,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACzBC,EAAY,GAElBD,EAAKd,KAAI,YAAiC,IAClCgB,EAAQ,CACZf,GAFqC,EAA7BA,GAGRC,KAHqC,EAAzBA,KAIZC,MAJqC,EAAnBc,cAOpB,OAAOF,EAAUG,KAAKF,MAGxBN,EAAUK,QAEX,CAACR,IAEGV,GAAUA,EAAOsB,OAAS,GAC/B,SAAC,EAAD,CAAYtB,OAAQA,KAEpB,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACE,yE","sources":["components/ActorsList/ActorsList.styled.js","components/ActorsList/ActorsList.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { accentTextColor } from 'utilities/variables/css';\n\nexport const List = styled.ul`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    margin: -10px;\n  }\n`;\n\nexport const Item = styled.li`\n  @media (max-width: 767px) {\n    margin-bottom: 50px;\n  }\n\n  @media (min-width: 768px) {\n    width: calc((100% - 10px * 8) / 4);\n    margin: 10px;\n  }\n`;\n\nexport const PhotoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 375px;\n  margin-bottom: 15px;\n`;\n\nexport const Photo = styled.img`\n  width: 250px;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  color: ${accentTextColor};\n`;\n","import propTypes from 'prop-types';\nimport actorBg from '../../utilities/images/actor.png';\nimport Container from 'components/Container';\nimport { List, Item, PhotoWrapper, Photo, Name } from './ActorsList.styled';\n\nfunction ActorsList({ actors }) {\n  return (\n    <Container isPadding>\n      <List>\n        {actors.map(({ id, name, photo }) => {\n          return (\n            <Item key={id}>\n              <PhotoWrapper>\n                <Photo\n                  src={\n                    photo ? `https://image.tmdb.org/t/p/w500/${photo}` : actorBg\n                  }\n                  alt={name}\n                />\n              </PhotoWrapper>\n              <Name>{name}</Name>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\n\nActorsList.propTypes = {\n  actors: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      name: propTypes.string,\n      photo: propTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default ActorsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'API/themoviedb-service';\nimport ActorsList from 'components/ActorsList';\nimport Container from 'components/Container';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(({ cast }) => {\n      const actorsArr = [];\n\n      cast.map(({ id, name, profile_path }) => {\n        const actor = {\n          id,\n          name,\n          photo: profile_path,\n        };\n\n        return actorsArr.push(actor);\n      });\n\n      setActors(actorsArr);\n    });\n  }, [movieId]);\n\n  return actors && actors.length > 0 ? (\n    <ActorsList actors={actors} />\n  ) : (\n    <Container isPadding>\n      <h2>We don't have any actors for this movie.</h2>\n    </Container>\n  );\n}\n\nexport default Cast;\n"],"names":["List","styled","Item","PhotoWrapper","Photo","Name","accentTextColor","actors","Container","isPadding","map","id","name","photo","src","actorBg","alt","movieId","useParams","useState","setActors","useEffect","getMovieCredits","then","cast","actorsArr","actor","profile_path","push","length"],"sourceRoot":""}