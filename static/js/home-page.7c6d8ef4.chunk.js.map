{"version":3,"file":"static/js/home-page.7c6d8ef4.chunk.js","mappings":"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","sources":["API/themoviedb-service.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8ac923aa1ed740356f073e222b9dc2ec';\n\nasync function getResource(url) {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/credits`;\n  const filter = `?api_key=${API_KEY}&language=en-US`;\n\n  const data = await getResource(`${url}${filter}`);\n\n  return data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}`;\n  const filter = `?api_key=${API_KEY}&language=en-US`;\n\n  const data = await getResource(`${url}${filter}`);\n\n  return data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews`;\n  const filter = `?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const data = await getResource(`${url}${filter}`);\n\n  return data;\n}\n\nexport async function getSearchMovies(query, page = 1) {\n  const url = `${BASE_URL}/search/movie`;\n  const filter = `?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n\n  const data = await getResource(`${url}${filter}`);\n\n  return data;\n}\n\nexport async function getTrending() {\n  const url = `${BASE_URL}/trending/all/day`;\n  const filter = `?api_key=${API_KEY}`;\n\n  const data = await getResource(`${url}${filter}`);\n\n  return data;\n}\n","import styled from '@emotion/styled';\nimport { accentTextColor, mainTextColor } from 'utilities/variables/css';\n\nexport const Item = styled.li`\n  @media (max-width: 767px) {\n    margin-bottom: 50px;\n  }\n\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    width: calc((100% - 4 * 10px) / 2);\n    margin: 10px 10px 90px;\n  }\n\n  @media (min-width: 1440px) {\n    width: calc((100% - 6 * 10px) / 3);\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n\n  color: ${accentTextColor};\n\n  width: 240px;\n  margin-bottom: 15px;\n\n  @media (min-width: 768px) {\n    width: 280px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 200px;\n  margin-bottom: 15px;\n\n  @media (min-width: 768px) {\n    width: 280px;\n  }\n`;\n\nexport const VoteWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 270px;\n\n  @media (min-width: 768px) {\n    max-width: 270px;\n  }\n`;\n\nexport const VoteAverage = styled.p`\n  color: ${mainTextColor};\n`;\n\nexport const VoteCount = styled.p`\n  color: ${mainTextColor};\n`;\n\nexport const Value = styled.span`\n  font-weight: 700;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport posterBg from '../../utilities/images/poster.jpg';\nimport {\n  Item,\n  Title,\n  Poster,\n  VoteWrapper,\n  VoteAverage,\n  VoteCount,\n  Value,\n} from './MovieCard.styled';\n\nexport default function MovieCard({\n  id,\n  title,\n  poster,\n  voteAverage,\n  voteCount,\n}) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Title>{title ? title : 'Movie without a title'}</Title>\n        <Poster\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : posterBg}\n          alt={title}\n        />\n        <VoteWrapper>\n          <VoteAverage>\n            Vote average: <Value>{voteAverage}</Value>\n          </VoteAverage>\n          <VoteCount>\n            Vote count:<Value> {voteCount}</Value>\n          </VoteCount>\n        </VoteWrapper>\n      </Link>\n    </Item>\n  );\n}\n\nMovieCard.propTypes = {\n  id: propTypes.number,\n  title: propTypes.string,\n  poster: propTypes.string,\n  voteAverage: propTypes.number,\n  voteCount: propTypes.number,\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.ul`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    margin: -10px;\n  }\n`;\n","import propTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard';\nimport { Wrapper } from './MoviesList.styled';\n\nexport default function MoviesList({ movies }) {\n  return (\n    <Wrapper>\n      {movies.map(({ id, title, poster, voteAverage, voteCount }) => {\n        return (\n          <MovieCard\n            key={id}\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            voteCount={voteCount}\n          />\n        );\n      })}\n    </Wrapper>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      title: propTypes.string,\n      poster: propTypes.string,\n      voteAverage: propTypes.number,\n      voteCount: propTypes.number,\n    }),\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'API/themoviedb-service';\nimport Container from 'components/Container';\nimport MoviesList from 'components/MoviesList';\n\nfunction HomePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    getTrending().then(({ results }) => {\n      const moviesArr = [];\n\n      results.map(\n        ({ id, original_title, poster_path, vote_average, vote_count }) => {\n          const movie = {\n            id,\n            title: original_title,\n            poster: poster_path,\n            voteAverage: vote_average,\n            voteCount: vote_count,\n          };\n\n          return moviesArr.push(movie);\n        },\n      );\n\n      setMovies(moviesArr);\n    });\n  }, []);\n\n  return (\n    movies && (\n      <Container>\n        <MoviesList movies={movies} />\n      </Container>\n    )\n  );\n}\n\nexport default HomePage;\n"],"names":["BASE_URL","API_KEY","getResource","url","fetch","response","json","data","console","error","getMovieCredits","movieId","filter","getMovieDetails","getMovieReviews","getSearchMovies","query","page","getTrending","Item","styled","Title","accentTextColor","Poster","VoteWrapper","VoteAverage","mainTextColor","VoteCount","Value","MovieCard","id","title","poster","voteAverage","voteCount","location","useLocation","to","state","from","src","posterBg","alt","Wrapper","MoviesList","movies","map","useState","setMovies","useEffect","then","results","moviesArr","movie","original_title","poster_path","vote_average","vote_count","push"],"sourceRoot":""}